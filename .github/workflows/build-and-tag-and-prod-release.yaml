name: build-and-tag-and-prod-release

on:
  workflow_call:
    runner:
        required: false
        type: string
        default: "self-hosted"
        description: "the github runner to run on, options are {ubuntu-latest, self-hosted, frontend}"
      service:
        required: true
        type: string
      project:
        required: true
        type: string
      release-tag:
        required: true
        type: string
      extra-deployments:
        required: false
        description: "for services that have multiple deployments in their values.yaml in fc-infra-kubernetes, provide the names of the other deployments e.g. 'worker,beat' as a comma separated list"
        type: string
      dockerfilepath:
        required: false
        type: string
        default: "./Dockerfile" # Dockerfile in the root of the repo
      docker-build-args:
        required: false
        type: string
        description: "newline separated list of non-secret arguments to pass to the docker build, e.g. 'APP_ENV=stg\nFOO=foo'"
      awsenvs:
        required: false
        description: "comma separate list of envs to release to, defaults to 'fc-services-prod/use1'"
        type: string
        default: "fc-services-prod/use1"
      post-build-script:
        required: false
        description: "file path of a shell script to run between the build step and the release step, e.g. 'scripts/myscript.sh'"
        type: string
      post-build-script-inputs:
        required: false
        description: "json string to pass to the post-build-script"
        type: string
    secrets:
      JFROG_FLOWCODE_SERVER_NAME:
        required: true
      JFROG_FLOWCODE_FC_DOCKER_USERNAME:
        required: true
      JFROG_FLOWCODE_FC_DOCKER_PASSWORD:
        required: true
      JFROG_FLOWCODE_FC_DOCKER_REPO:
        required: true
      PERSONAL_ACCESS_TOKEN_GITHUB_WORKFLOWS_CICD:
        required: true
      JFROG_FLOWCODE_FC_PYPI_USERNAME:
        required: false
      JFROG_FLOWCODE_FC_PYPI_PASSWORD:
        required: false
      STATIC_ASSETS_S3_AWS_ACCESS_KEY_ID:
        required: false
      STATIC_ASSETS_S3_AWS_SECRET_ACCESS_KEY:
        required: false

jobs:
  release:
    runs-on: ${{ inputs.runner }}
    steps:
      -
        name: Create Release
        id: semantic-release
        uses: dtx-company/shared-github-workflows/composite-actions/release-notes@trunk
      - name: build and push docker
        uses: dtx-company/shared-github-workflows/composite-actions/docker-build-and-push@feat/use-input-action
        with:
          runner: ${{ inputs.runner }}
          service: ${{ inputs.service }}
          project: ${{ inputs.project }}
          extra-deployments: ${{ inputs.extra-deployments }}
          dockerfilepath: ${{ inputs.dockerfilepath }}
          docker-build-args: ${{ inputs.docker-build-args }}
          awsenvs: ${{ inputs.awsenvs }}
          post-build-script: ${{ inputs.post-build-script }}
          post-build-script-inputs: ${{ inputs.post-build-script-inputs }}
          release-tag: ${{ steps.semantic-release.outputs.release-tag }}

          # secrets needs to be passed in as inputs to composite actions
          JFROG_FLOWCODE_SERVER_NAME: ${{ secrets.JFROG_FLOWCODE_SERVER_NAME }}
          JFROG_FLOWCODE_FC_DOCKER_USERNAME: ${{ secrets.JFROG_FLOWCODE_FC_DOCKER_USERNAME }}
          JFROG_FLOWCODE_FC_DOCKER_PASSWORD: ${{ secrets.JFROG_FLOWCODE_FC_DOCKER_PASSWORD }}
          JFROG_FLOWCODE_FC_DOCKER_REPO: ${{ secrets.JFROG_FLOWCODE_FC_DOCKER_REPO }}
          PERSONAL_ACCESS_TOKEN_GITHUB_WORKFLOWS_CICD: ${{ secrets.PERSONAL_ACCESS_TOKEN_GITHUB_WORKFLOWS_CICD }}
          JFROG_FLOWCODE_FC_PYPI_USERNAME: ${{ secrets.JFROG_FLOWCODE_FC_PYPI_USERNAME }}
          JFROG_FLOWCODE_FC_PYPI_PASSWORD: ${{ secrets.JFROG_FLOWCODE_FC_PYPI_PASSWORD }}
          STATIC_ASSETS_S3_AWS_ACCESS_KEY_ID: ${{ secrets.STATIC_ASSETS_S3_AWS_ACCESS_KEY_ID }}
          STATIC_ASSETS_S3_AWS_SECRET_ACCESS_KEY: ${{ secrets.STATIC_ASSETS_S3_AWS_SECRET_ACCESS_KEY }}