name: build-and-push-and-deploy-flow-smoketest

on:
  workflow_call:
    inputs:
      runner:
        required: false
        type: string
        default: 'fc-general'
        description: 'the self-hosted github runner to run on, options are {fc-general, frontend, fc-node, fc-go}'
      service:
        required: true
        type: string
      project:
        required: true
        type: string
      image-tag:
        required: false
        type: string
      clusters:
        required: false
        type: string
        description: "comma separated list of clusters to release to, defaults to 'primary'"
        default: 'primary'
      extra-deployments:
        required: false
        description: "for services that have multiple deployments in their values.yaml in fc-infra-kubernetes, provide the names of the other deployments e.g. 'worker,beat' as a comma separated list"
        type: string
      dockerfilepath:
        required: false
        type: string
        default: './Dockerfile' # Dockerfile in the root of the repo
      docker-build-args:
        required: false
        type: string
        description: "newline separated list of non-secret arguments to pass to the docker build, e.g. 'APP_ENV=stg\nFOO=foo'"
      awsenvs:
        required: false
        description: "comma separated list of envs to release to, defaults to 'fc-services-stg/use1,fc-services-preprod/use1'"
        type: string
        default: 'fc-services-stg/use1,fc-services-preprod/use1'
      post-build-script:
        required: false
        description: "file path of a shell script to run between the build step and the release step, e.g. 'scripts/myscript.sh'"
        type: string
      post-build-script-inputs:
        required: false
        description: 'json string to pass to the post-build-script'
        type: string
      ecr-image-path:
        required: false
        description: 'custom path to access the ECR docker image'
        type: string
      upload-sourcemaps:
        required: false
        description: 'upload sourcemap files to DataDog'
        type: string
      asset-path:
        required: false
        description: 'custom path to expected static assets'
        type: string
        default: '.next/static/.'
    secrets:
      PERSONAL_ACCESS_TOKEN_GITHUB_WORKFLOWS_CICD:
        required: true
      FLOWLYTICS_FC_GEOGRAPHY_CHART:
        required: true
      AUTH_CACHE_REDIS_PASSWORD:
        required: true
      GOOGLE_CLOUD_API_KEY:
        required: true
      OPENSEA_API_KEY:
        required: true
      OPTIMIZELY_SDK_KEY:
        required: true
      RECAPTCHA_SITE_KEY:
        required: true
      STRIPE_API_KEY:
        required: true
      STRIPE_FLOW_STARTER_CHECKOUT_KEY:
        required: true
      STRIPE_PRINT_STORE_CHECKOUT_KEY:
        required: true

permissions:
  id-token: write # Required for aws role assumption

jobs:
  cd:
    runs-on: [self-hosted, '${{ inputs.runner }}']
    environment: prod
    steps:
      - name: Setup Image Repository
        uses: dtx-company/shared-github-workflows/composite-actions/setup-image-repository@v1
        with:
          service: ${{ inputs.service }}
          ECR_FLOWCODE_FC_DOCKER_SERVER: ${{ secrets.ECR_FLOWCODE_FC_DOCKER_SERVER }}
          ECR_FLOWCODE_FC_DOCKER_KEY: ${{ secrets.ECR_FLOWCODE_FC_DOCKER_KEY }}
          ECR_FLOWCODE_FC_DOCKER_SECRET: ${{ secrets.ECR_FLOWCODE_FC_DOCKER_SECRET }}
      - name: Setup Docker
        uses: dtx-company/shared-github-workflows/composite-actions/setup-docker@v1
      - name: Docker Build and Push
        uses: dtx-company/shared-github-workflows/composite-actions/docker-build-and-push-flow@v1
        with:
          service: ${{ inputs.service }}
          image-tag: ${{ github.sha }}
          branch-name: ${{ github.head_ref || github.ref_name }}
          dockerfilepath: ${{ inputs.dockerfilepath }}
          docker-build-args: |
            ${{ inputs.docker-build-args }}
            FLOWLYTICS_FC_GEOGRAPHY_CHART=${{ secrets.FLOWLYTICS_FC_GEOGRAPHY_CHART }}
            AUTH_CACHE_REDIS_PASSWORD=${{ secrets.AUTH_CACHE_REDIS_PASSWORD }}
            GOOGLE_CLOUD_API_KEY=${{ secrets.GOOGLE_CLOUD_API_KEY }}
            OPENSEA_API_KEY=${{ secrets.OPENSEA_API_KEY }}
            OPTIMIZELY_SDK_KEY=${{ secrets.OPTIMIZELY_SDK_KEY }}
            RECAPTCHA_SITE_KEY=${{ secrets.RECAPTCHA_SITE_KEY }}
            STRIPE_API_KEY=${{ secrets.STRIPE_API_KEY }}
            STRIPE_FLOW_STARTER_CHECKOUT_KEY=${{ secrets.STRIPE_FLOW_STARTER_CHECKOUT_KEY }}
            STRIPE_PRINT_STORE_CHECKOUT_KEY=${{ secrets.STRIPE_PRINT_STORE_CHECKOUT_KEY }}
          ecr-image-path: ${{ inputs.ecr-image-path }}
          PERSONAL_ACCESS_TOKEN_GITHUB_WORKFLOWS_CICD: ${{ secrets.PERSONAL_ACCESS_TOKEN_GITHUB_WORKFLOWS_CICD }}
          ECR_FLOWCODE_FC_DOCKER_SERVER: ${{ secrets.ECR_FLOWCODE_FC_DOCKER_SERVER }}
          GHA_ACTIONS_S3_CACHE_AWS_ACCESS_KEY_ID: ${{ secrets.BUILD_ARTIFACTS_S3_CACHE_AWS_ACCESS_KEY_ID }}
          GHA_ACTIONS_S3_CACHE_AWS_SECRET_ACCESS_KEY: ${{ secrets.BUILD_ARTIFACTS_S3_CACHE_AWS_SECRET_ACCESS_KEY }}
      - name: Extract flow-app assets
        uses: dtx-company/shared-github-workflows/composite-actions/extract-and-upload-static-assets-flow@v1
        with:
          service: ${{ inputs.service }}
          image-tag: ${{ github.sha }}
          ecr-image-path: ${{ inputs.ecr-image-path }}
          post-build-script-inputs: ${{ inputs.post-build-script-inputs }}
          STATIC_ASSETS_S3_AWS_ACCESS_KEY_ID: ${{ secrets.STATIC_ASSETS_S3_AWS_ACCESS_KEY_ID }}
          STATIC_ASSETS_S3_AWS_SECRET_ACCESS_KEY: ${{ secrets.STATIC_ASSETS_S3_AWS_SECRET_ACCESS_KEY }}
          ECR_FLOWCODE_FC_DOCKER_SERVER: ${{ secrets.ECR_FLOWCODE_FC_DOCKER_SERVER }}
          asset-path: ${{ inputs.asset-path }}
      - name: Update fc-infra-kubernetes
        uses: dtx-company/shared-github-workflows/composite-actions/update-infra-kubernetes@v1
        with:
          service: ${{ inputs.service }}
          project: ${{ inputs.project }}
          awsenvs: ${{ inputs.awsenvs }}
          extra-deployments: ${{ inputs.extra-deployments }}
          image-tag: ${{ github.sha }}
          clusters: ${{ inputs.clusters }}
          ecr-image-path: ${{ inputs.ecr-image-path }}
          PERSONAL_ACCESS_TOKEN_GITHUB_WORKFLOWS_CICD: ${{ secrets.PERSONAL_ACCESS_TOKEN_GITHUB_WORKFLOWS_CICD }}
          ECR_FLOWCODE_FC_DOCKER_SERVER: ${{ secrets.ECR_FLOWCODE_FC_DOCKER_SERVER }}
