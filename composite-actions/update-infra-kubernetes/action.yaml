name: update-infra-kubernetes

inputs:
  service:
    required: true
    type: string
  repo:
    required: false
    description: "which repository to check out and commit to, defaults to 'fc-infra-kubernetes'"
    type: string
    default: "fc-infra-kubernetes"
  project:
    required: true
    type: string
  awsenvs:
    required: false
    description: "comma separated list of envs to release to, defaults to 'fc-services-stg/use1,fc-services-preprod/use1'"
    type: string
    default: "fc-services-stg/use1,fc-services-preprod/use1"
  clusters:
    required: false
    description: "comma separated list of clusters to release to, defaults to 'primary'"
    default: "primary"
  extra-deployments:
    required: false
    description: "for services that have multiple deployments in their values.yaml, provide the names of the other deployments e.g. 'worker,beat' as a comma separated list"
    type: string
  image-tag:
    required: true
  ecr-image-path:
    required: false
    description: "custom path to access the ECR docker image"
    type: string
  PERSONAL_ACCESS_TOKEN_GITHUB_WORKFLOWS_CICD:
        required: true
  ECR_FLOWCODE_FC_DOCKER_SERVER:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Checkout kubernetes infra repo
      uses: actions/checkout@v3
      with:
        repository: dtx-company/${{ inputs.repo }}
        token: ${{ inputs.PERSONAL_ACCESS_TOKEN_GITHUB_WORKFLOWS_CICD }}
    - name: Update the image tags in values.yaml and push commit
      shell: bash
      run: |
        echo "Installing yq..."
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod a+x /usr/local/bin/yq
        echo;
        echo "Setting git config..."
        git config --local user.name "${{ github.event.sender.login }}"
        git config --local user.email "${{ github.event.sender.id }}+${{ github.event.sender.login }}@users.noreply.github.com"
        echo;
        IFS=, read -ra awsenvs <<< "${{ inputs.awsenvs }}" # get list of envs to release to
        for awsenv in "${awsenvs[@]}"
        do
          for cluster in "{clusters[@]}"
          do
            filename="cloud/aws/${awsenv}/${cluster}/${{ inputs.project }}/applications/${{ inputs.service }}/values.yaml"
            IFS=, read -ra deployments <<< "${{ inputs.extra-deployments }}"  # split by comma into an array
            deployments+=("fc-service")                                       # fc-service is always included
            echo "Updating ${filename} for deployments ${deployments[*]}..."
            for d in "${deployments[@]}"
            do
              path=".${d}.process.image" yq -i eval 'eval(strenv(path)) = "${{ inputs.ECR_FLOWCODE_FC_DOCKER_SERVER }}/${{ inputs.service }}"'  ${filename}
              path=".${d}.process.tag" yq -i eval 'eval(strenv(path)) = "${{ inputs.ecr-image-path }}${{ inputs.image-tag }}"'  ${filename}
            done
            git add ${filename}
          done
        done
        echo; echo;
        echo "Pushing to git..."
        git diff HEAD
        if [[ $(git diff HEAD) ]]; then
          echo "Temp no push"
        else
          echo "Nothing to push"
        fi
